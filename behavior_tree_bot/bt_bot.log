INFO:root:
Selector: Capture Neutrals Then Idle
| Sequence: Smart Spread to Neutral
| | Check: if_neutral_planet_available
| | Action: spread_to_nearest_capturable_neutral
| Action: do_nothing

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 6 5.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 20 8.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 3 13.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 5 5.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 19 8.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 4 13.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 9 39.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 10 39.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 22 47.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:20 13 48.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:3 14 48.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:6 21 47.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 0 62.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:20 7 67.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:9 16 67.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:5 8 67.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:19 15 67.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:1 11 77.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:6 12 77.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:3 18 85.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Order:10 17 85.0
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Success
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_nearest_capturable_neutral
DEBUG:root:Result: Action: spread_to_nearest_capturable_neutral -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: Capture Neutrals Then Idle
DEBUG:root:Executing:Sequence: Smart Spread to Neutral
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Smart Spread to Neutral -> Failure
DEBUG:root:Executing:Action: do_nothing
DEBUG:root:Result: Action: do_nothing -> Success
DEBUG:root:Result: Selector: Capture Neutrals Then Idle -> Success
DEBUG:root:Finish turn

